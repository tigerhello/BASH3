<Window x:Class="Demo.ui.view.dialog.RecipeEditConfDlg"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Demo.ui.view.dialog"
        xmlns:widget="clr-namespace:Demo.ui.view.widget"
        mc:Ignorable="d"
        Title="Recipe Modificatoin" Height="430" Width="600">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="520"/>
            <ColumnDefinition Width="1*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1*"/>
            <RowDefinition Height="320"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="1" Grid.Column="1">
            <Label Content="Would you want to commit the modification?" Margin="0,0,0,0" Width="500" Height="30" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <!--<widget:SelectTextWidget Text="{Binding Baseline}" Margin="100,0,0,0" Padding="4,4,0,0" Width="200" Height="30" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Top" TextAlignment="Left"/>
            <Label Content="Nick Name:" Margin="0,35,0,0" Width="100" Height="30" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <widget:SelectTextWidget Text="{Binding NickName}" Margin="100,35,0,0" Padding="4,4,0,0" Width="200" Height="30" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Top" TextAlignment="Left"/>
            
            <Label Content="Password:" Margin="0,70,0,0" Width="100" Height="30" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <PasswordBox x:Name="password" Margin="100,70,0,0" Padding="4,4,0,0" Width="200" Height="30" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Top" />
            <Label Content="Confirmation:" Margin="0,105,0,0" Width="100" Height="30" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <PasswordBox x:Name="passwordConf" Margin="100,105,0,0" Padding="4,4,0,0" Width="200" Height="30" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Top" />
            <Label Content="Role:" Margin="0,140,0,0" Width="100" Height="30" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Top"/>
            <ComboBox SelectedIndex="{Binding UserRole}" Margin="100,140,0,0" Padding="10,5,0,0" Width="200" Height="30" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Top">
                <ComboBoxItem Name="nil"></ComboBoxItem>
                <ComboBoxItem Name="administraotr">Administraotr</ComboBoxItem>
                <ComboBoxItem  Name="config">Config Engineer</ComboBoxItem>
                <ComboBoxItem  Name="recipe">Recipe Engineer</ComboBoxItem>
                <ComboBoxItem  Name="maintainent">Maintainent Engineer</ComboBoxItem>
            </ComboBox>
            -->
            <DataGrid x:Name="itemDataGrid"  Margin="0,30,0,0" FrozenColumnCount="2" ItemsSource="{Binding}" Width="520" Height="280" EnableRowVirtualization="true" CanUserSortColumns="True" CanUserDeleteRows="False" CanUserAddRows="False" AutoGenerateColumns="False" HorizontalAlignment="Left" VerticalAlignment="Top">
                <DataGrid.Columns>
                    <DataGridTextColumn x:Name="id" Header="ID" ElementStyle="{StaticResource CenterAlignStyle}" Width="40" Binding="{Binding ID}"  IsReadOnly="True">
                        <DataGridTextColumn.CellStyle>
                            <Style  TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter Property="Foreground" Value="Gray"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#0078D7"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn x:Name="stepID" Header="Step ID" ElementStyle="{StaticResource LeftAlignStyle}" Width="80" Binding="{Binding StepID}"  IsReadOnly="True" >
                        <DataGridTextColumn.CellStyle>
                            <Style  TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter Property="Foreground" Value="Gray"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#0078D7"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn x:Name="desc" Header="Description" ElementStyle="{StaticResource LeftAlignStyle}" Width="170" Binding="{Binding Description}"  IsReadOnly="True"  >
                        <DataGridTextColumn.CellStyle>
                            <Style  TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter Property="Foreground" Value="Gray"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#0078D7"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn x:Name="oldValue" Header="Old Value" ElementStyle="{StaticResource CenterAlignStyle}" Width="100" Binding="{Binding OldValue}"  IsReadOnly="True">
                        <DataGridTextColumn.CellStyle>
                            <Style  TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter Property="Foreground" Value="Gray"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#0078D7"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                    <DataGridTextColumn x:Name="newValue" Header="New Value" ElementStyle="{StaticResource CenterAlignStyle}" Width="100" Binding="{Binding NewValue}"  IsReadOnly="True" >
                        <DataGridTextColumn.CellStyle>
                            <Style  TargetType="{x:Type DataGridCell}" >
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="False">
                                        <Setter Property="Foreground" Value="Gray"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="#0078D7"/>
                                        <Setter Property="Foreground" Value="White"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGridTextColumn.CellStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
                <DataGrid.ColumnHeaderStyle>
                    <Style TargetType="DataGridColumnHeader">
                        <Setter Property="Height" Value="24"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="14"/>
                        <Setter Property="FontWeight" Value="Normal"/>
                        <Setter Property="Foreground" Value="#FF646366"/>
                    </Style>
                </DataGrid.ColumnHeaderStyle>
                <DataGrid.RowStyle>
                    <Style  TargetType="DataGridRow">
                        <Setter Property="Background" Value="#F6F6F6" />
                        <Setter Property="Height" Value="30"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="Foreground" Value="Black" />
                        <Setter Property="IsSelected" Value="{Binding Selected, Mode=TwoWay}" />
                        <Style.Triggers>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                <Setter Property="Background" Value="#F6F6F6"></Setter>
                            </Trigger>
                            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                <Setter Property="Background" Value="#FAFAFA"></Setter>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="LightGray"/>
                            </Trigger>

                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Foreground" Value="Blue"/>
                            </Trigger>

                        </Style.Triggers>
                    </Style>
                </DataGrid.RowStyle>
            </DataGrid>
        </Grid>
        <Grid Grid.Row="2" Grid.Column="1">
            <Button  Content="Apply" Click="btnApply_Click" Margin="0,2,110,2" HorizontalAlignment="Right" Width="90" Height="26" />
            <Button  Content="Cancel" Click="btnCanel_Click" Margin="0,2,10,2" HorizontalAlignment="Right" Width="90" Height="26" />
        </Grid>
     
    </Grid>

</Window>
